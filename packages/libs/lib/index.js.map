{"version":3,"file":"index.js","mappings":"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","sources":["webpack://domTools/webpack/bootstrap","webpack://domTools/webpack/runtime/define property getters","webpack://domTools/webpack/runtime/hasOwnProperty shorthand","webpack://domTools/webpack/runtime/make namespace object","webpack://domTools/./core/index.js","webpack://domTools/./index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\n/**\n *\n * @param {string|HTMLElement}\n *  如果是字符串\n *    如果是.xx ,则返回class为.xx的dom\n *    如果是#xx ,则返回id为#xx的dom\n *    如果是xx ,则返回元素标签为xx的dom，或id为xx的dom，或class为xx的dom，优先级为 标签>id>class\n *  如果是HTMLElement\n *    则直接返回该HTMLElement\n * @returns HTMLElement\n */\nexport function getDomElement(domstr) {\n  let dom = null;\n  if (!domstr) return;\n\n  if (domstr instanceof HTMLElement || domstr instanceof Document) {\n    dom = domstr;\n  } else {\n    // dom = document.querySelector(domstr)\n    ['.', '#'].includes(domstr.substr(0, 1))\n      ? (dom = document.querySelector(domstr))\n      : (dom =\n        document.querySelector(`${domstr}`) ||\n        document.querySelector(`#${domstr}`) ||\n        document.querySelector(`.${domstr}`));\n  }\n  return dom;\n}\n\n// 是否移动到屏幕中\nexport function isScrollIntoView(target, scrollContainter) {\n  // const scrollEl = getDomElement(scrollContainter || document.body);\n  const targetEl = getDomElement(target);\n  if (targetEl) {\n    const wH = Math.min(window.innerHeight, window.outerHeight);\n    const sH = document.body.scrollTop || document.documentElement.scrollTop;\n    const targetRect = getRectFromView(targetEl);\n    const currentViewRect = {\n      bottom: sH + wH,\n      top: sH,\n    };\n    if (\n      (targetRect.top >= currentViewRect.top &&\n        targetRect.top <= currentViewRect.bottom) ||\n      (targetRect.bottom >= currentViewRect.top &&\n        targetRect.bottom <= currentViewRect.bottom)\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * \n * @param {string|HTMLElement} domstr 入参同getDomElement\n * 获取该元素相对于屏幕左上角的坐标\n * @returns \n * {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      height: curDom.offsetHeight,\n      width: curDom.offsetWidth,\n      el: curDom,\n    }\n */\nexport function getRectFromView(domstr) {\n  const dom = getDomElement(domstr);\n  if (dom) {\n    if (dom.getBoundingClientRect) {\n      return {\n        ...dom.getBoundingClientRect(),\n        el: dom,\n      };\n    }\n    const _getRect = (curDom) => {\n      let rect = {\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        height: curDom.offsetHeight,\n        width: curDom.offsetWidth,\n        el: curDom,\n      };\n      const getOffsetParentRect = (newDom) => {\n        if (newDom && newDom instanceof HTMLElement) {\n          rect = {\n            ...rect,\n            top: rect.top + newDom.offsetTop,\n            bottom: rect.top + newDom.offsetTop + curDom.offsetHeight,\n            left: rect.left + newDom.offsetLeft,\n            right: rect.left + newDom.offsetLeft + curDom.offsetWidth,\n          };\n          if (newDom.offsetParent) {\n            return getOffsetParentRect(newDom.offsetParent);\n          }\n        }\n        return rect;\n      };\n\n      return getOffsetParentRect(curDom);\n    };\n    return _getRect(dom);\n  }\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 0,\n    width: 0,\n    el: null,\n  };\n}\n\n/**\n * 监听dom滑动时 鼠标上下左右移动，并触发相应事件\n * @param {HTMLElement} options.el .xx #xx xx 或dom元素\n * @param {Boolean} options.once 为true则只在初始时触发或改变方向时触发options.Function\n * @param {Function} options.moveLeft moveLeft\n * @param {Function} options.moveRight moveRight\n * @param {Function} options.moveTop moveTop\n * @param {Function} options.moveBottom moveBottom\n * @returns\n */\nexport function mouseMoveObsever(options) {\n  const { el, moveLeft, moveRight, moveTop, moveBottom, once } = {\n    el: null,\n    moveLeft: () => { },\n    moveRight: () => { },\n    moveTop: () => { },\n    moveBottom: () => { },\n    once: true,\n    ...options,\n    el: getDomElement(options.el),\n  };\n  if (!(el instanceof HTMLElement))\n    return console.error('el不是HTMLElement类型');\n  let startX, startY, moveEndX, moveEndY, X, Y, flag, direction;\n  function touchstartHandle(e) {\n    once && (flag = true);\n    // e.preventDefault();\n    (startX = e.changedTouches[0].pageX), (startY = e.changedTouches[0].pageY);\n  }\n  function changeFlagWithDirection(newDirection) {\n    if (direction !== newDirection) {\n      once && (flag = true);\n    }\n  }\n  function touchmoveHandle(e) {\n    // e.preventDefault();\n\n    (moveEndX = e.changedTouches[0].pageX),\n      (moveEndY = e.changedTouches[0].pageY),\n      (X = moveEndX - startX),\n      (Y = moveEndY - startY);\n    startX = moveEndX;\n    startY = moveEndY;\n\n    if (X > 0) {\n      changeFlagWithDirection('right');\n      direction = 'right';\n      flag && moveRight instanceof Function && moveRight();\n    } else if (X < 0) {\n      changeFlagWithDirection('left');\n      direction = 'left';\n      flag && moveLeft instanceof Function && moveLeft();\n    } else if (Y > 0) {\n      changeFlagWithDirection('top');\n      direction = 'top';\n      moveTop instanceof Function && moveTop();\n    } else if (Y < 0) {\n      changeFlagWithDirection('bottom');\n      direction = 'bottom';\n      moveBottom instanceof Function && moveBottom();\n    } else {\n      console.log('anything else');\n    }\n    once && (flag = false);\n  }\n  return {\n    register() {\n      el.addEventListener('touchstart', touchstartHandle);\n      el.addEventListener('touchmove', touchmoveHandle);\n    },\n    destroy() {\n      el.removeEventListener('touchstart', touchstartHandle);\n      el.removeEventListener('touchmove', touchmoveHandle);\n    },\n  };\n}\n\n/**\n * 根据source dom ：el 来获取满足条件的父元素，如果存在则返回，否则返回null，\n * 常见场景：\n *  根据click的e.target来获取某个父元素，并作相应的操作，或者是如果存在父元素，则做另外的逻辑操作\n * \n * @param {Object} options\n * options: \n *  options.el 源dom\n *  options.incude include约束条件\n *    options.incude.class options.incude.id options.incude.attrs\n *    options.incude.attrs: 包含自定义属性对象的数组\n *      {key:string,value:string} key为自定义属性的key，value为自定义属性的value\n *  options.exclude exclude约束条件\n *    options.exclude.class options.exclude.id options.exclude.attrs\n *    options.exclude.attrs: 包含自定义属性对象的数组\n *      {key:string,value:string} key为自定义属性的key，value为自定义属性的value\n * \n * 具体结构如下:\n * el: 同getDomElement的入参\n * include: {\n *  class: 要包含的class\n *  id: 要包含的id\n *  attrs:[{\n *    key: 要包含的自定义属性的key\n *    value: 要包含的自定义属性的value\n *  }]\n *  isCross: 是否同时满足class，id与attrs约束的条件\n *    为true时需要同时满足，\n *    为false时满足任一条件即可\n * }\n * exclude: {\n *  class: 要排除的class\n *  id: 要排除的id\n *  attrs:[{\n *    key: 要排除的自定义属性的key\n *    value: 要排除的自定义属性的value\n *  }]\n *  isCross: 是否同时满足class，id与attrs约束的条件\n *    为true时需要同时满足，\n *    为false时满足任一条件即可\n * }\n * @returns HTMLElement | Document | null\n */\nexport function getTargetNodeBySourceDom(options) {\n  const _options = {\n    el: null,\n    include: {\n      class: null,\n      id: null,\n      attrs: [],\n      isCorss: true,\n    },\n    exclude: {\n      class: null,\n      id: null,\n      attrs: [],\n      isCorss: false,\n    },\n    ...options,\n    el: getDomElement(options.el),\n  };\n  const { el, include, exclude } = _options;\n  const getFormatedArray = (arr) => [...arr];\n  const isIncludeClassByNode = (dom, className) => {\n    if (dom instanceof HTMLElement) {\n      return getFormatedArray(dom?.classList)?.includes(className);\n    }\n    return [];\n  };\n  const isExpected = (dom) => {\n    if (dom instanceof Document) return null;\n    const getComparisonFlag = (comparisonOption, type) => {\n      let flagArr = [],\n        finalFlag = true;\n      for (let key in comparisonOption) {\n        const value = comparisonOption[key];\n        if (key === 'isCross') continue;\n        if (key === 'class') {\n          flagArr.push(isIncludeClassByNode(dom, value));\n        }\n        if (key === 'id') {\n          flagArr.push(dom.id === value);\n        }\n        // if (key === 'attrs' ) {\n        if (key === 'attrs' && value.filter((item) => item.key).length > 0) {\n          let isIncludeAttrs = [];\n          value\n            .filter((item) => item.key)\n            .map((attr) => {\n              isIncludeAttrs.push(\n                attr['value'] === dom.getAttribute(attr['key']),\n              );\n            });\n\n          flagArr.push(\n            isIncludeAttrs.length > 0 && isIncludeAttrs.every(Boolean),\n          );\n          // flagArr.push(isIncludeAttrs.length === value.length && isIncludeAttrs.every(Boolean))\n        }\n      }\n\n      if (comparisonOption['isCross']) {\n        //include: 交集，需要同时满足class、id与attrs\n        finalFlag = flagArr.length > 0 && flagArr.every(Boolean);\n      } else {\n        finalFlag = flagArr.some(Boolean);\n      }\n      return finalFlag;\n    };\n    const isInclude = getComparisonFlag(include);\n    const isExclude = getComparisonFlag(exclude, 'exclude');\n    return isInclude && !isExclude;\n  };\n  if (!el) return null;\n  if (isExpected(el)) {\n    return el;\n  }\n  const parentnode = el?.parentNode;\n  if (!parentnode) return null;\n  if (isExpected(parentnode)) {\n    return parentnode;\n  } else {\n    return getTargetNodeBySourceDom({ ..._options, el: parentnode });\n  }\n};\n\n// 将img转成base64\nexport function imageToBase64(url, outputFormat) {\n  return new Promise((resolve) => {\n    let canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const img = new window.Image();\n    img.crossOrigin = 'anonymous';\n    img.onload = () => {\n      canvas.height = img.height;\n      canvas.width = img.width;\n      ctx.drawImage(img, 0, 0);\n      const dataURL = canvas.toDataURL(outputFormat || 'image/png');\n      resolve(dataURL);\n      canvas = null;\n    };\n    img.src = url;\n  });\n}\n\n// 缓存的promise实例，后续倘若请求到同一个资源，则返回之前已加载的资源\nconst loadPromises = {};\n\n/**\n * 动态生成script并放入到head标签的内部，返回一个可提供回调的Promise\n * 由于是动态通过js加载的资源，因此放到head标签上也不会印象页面渲染速度\n * @param {string} src script标签的src\n * @param {object} opts script标签的属性\n * @returns Promise\n */\nexport function loadScript(src, opts = {}) {\n  if (loadPromises[src]) {\n    return loadPromises[src];\n  }\n  const promise = (loadPromises[src] = new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    script.type = opts.type || 'text/javascript';\n    script.charset = opts.charset || 'utf8';\n    script.async = 'async' in opts ? !!opts.async : true;\n    script.src = src;\n    if (opts.attrs) {\n      for (var attr in opts.attrs) {\n        script.setAttribute(attr, opts.attrs[attr]);\n      }\n    }\n    let loaded = false;\n    script.onload = script.onreadystatechange = function () {\n      if (\n        (script.readyState &&\n          script.readyState !== 'complete' &&\n          script.readyState !== 'loaded') ||\n        loaded\n      ) {\n        return false;\n      }\n      script.onload = script.onreadystatechange = null;\n      loaded = true;\n      resolve();\n    };\n    script.onerror = function () {\n      script.onload = script.onreadystatechange = null;\n      reject();\n    };\n    const head = document.getElementsByTagName('head')[0];\n    head.insertBefore(script, head.firstChild);\n  }));\n  return promise;\n}\n\n/**\n * 已内联的形式将css code渲染到style标签中，并塞入到head标签的尾部\n * @param {string} code css代码字符串\n */\nexport function loadCSSCode(code) {\n  const style = document.createElement('style');\n  style.type = 'text/css';\n  style.rel = 'stylesheet';\n  //for Chrome Firefox Opera Safari\n  style.appendChild(document.createTextNode(code));\n  //for IE\n  //style.styleSheet.cssText = code;\n  const head = document.getElementsByTagName('head')[0];\n  head.appendChild(style);\n}\n\n/**\n * 动态生成link标签，加载指定css并将link标签放入到head尾部\n * @param {string} href 要加载的css href\n */\nexport function loadCSS(href) {\n  const link = document.createElement('link');\n  link.rel = 'stylesheet';\n  link.href = href;\n  const head = document.getElementsByTagName('head')[0];\n  head.appendChild(link);\n}\n\n/**\n * 加载指定src的图片资源并将生成img标签通过Promise返回，同时缓存该Promise实例\n * @param {string} src 图片的src\n * @returns Promise\n */\nexport function loadImage(src) {\n  if (loadPromises[src]) {\n    return loadPromises[src];\n  }\n  const promise = (loadPromises[src] = new Promise((resolve, reject) => {\n    const img = document.createElement('img');\n    img.src = src;\n    img.onload = function () {\n      resolve(img);\n    };\n    img.onerror = function (e) {\n      img.onload = null;\n      reject(e);\n    };\n  }));\n  return promise;\n}\n\n\nexport default {\n  getDomElement,\n  getRectFromView,\n  isScrollIntoView,\n  getTargetNodeBySourceDom,\n  imageToBase64,\n  loadScript,\n  loadCSSCode,\n  loadCSS,\n  loadImage,\n};\n","export {\n  getDomElement,\n  getRectFromView,\n  isScrollIntoView,\n  getTargetNodeBySourceDom,\n  imageToBase64,\n  loadScript,\n  loadCSSCode,\n  loadCSS,\n  loadImage,\n} from './core';\n\nimport domTools from './core';\n\nexport default domTools;\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","getDomElement","domstr","dom","HTMLElement","Document","includes","substr","document","querySelector","isScrollIntoView","target","scrollContainter","targetEl","wH","Math","min","window","innerHeight","outerHeight","sH","body","scrollTop","documentElement","targetRect","getRectFromView","currentViewRect","bottom","top","getBoundingClientRect","el","curDom","rect","left","right","height","offsetHeight","width","offsetWidth","getOffsetParentRect","newDom","offsetTop","offsetLeft","offsetParent","_getRect","getTargetNodeBySourceDom","options","_options","include","class","id","attrs","isCorss","exclude","isIncludeClassByNode","className","arr","classList","isExpected","getComparisonFlag","comparisonOption","type","flagArr","finalFlag","push","filter","item","length","isIncludeAttrs","map","attr","getAttribute","every","Boolean","some","isInclude","isExclude","parentnode","parentNode","imageToBase64","url","outputFormat","Promise","resolve","canvas","createElement","ctx","getContext","img","Image","crossOrigin","onload","drawImage","dataURL","toDataURL","src","loadPromises","loadScript","opts","reject","script","charset","async","setAttribute","loaded","onreadystatechange","readyState","onerror","head","getElementsByTagName","insertBefore","firstChild","loadCSSCode","code","style","rel","appendChild","createTextNode","loadCSS","href","link","loadImage","e"],"sourceRoot":""}